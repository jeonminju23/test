<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.trioshop.repository.mybatis.UserMapper">

    <!--사용자 로그인을 위한 쿼리문 -->
    <!--usercode가 두테이블모두사용되기때문에 별칭을 정해줘야한다.-->
    <!--tuser가 TRIO_USERS,info가 TRIO_USERS_INFO-->
    <select id="loginUser" parameterType="UserIdPasswd" resultType="UserInfoBySession">
        SELECT
            tuser.user_code AS userCode,
            tuser.grade_code AS gradeCode,
            tuser.user_id AS userId,
            tuser.user_passwd AS userPasswd,
            info.user_nickname AS userNickname
        FROM
            TRIO_USERS tuser
                JOIN
            TRIO_USERS_INFO info
            ON
                tuser.user_code = info.user_code
        WHERE
            tuser.user_id = #{userId}
          AND tuser.user_passwd = #{userPasswd}
    </select>

    <!-- 사용자 회원가입을 위한 쿼리문 -->
    <!-- TRIO_USERS 테이블에 사용자 정보 저장 -->
    <insert id="saveUsers" parameterType="UserJoin">
        INSERT INTO TRIO_USERS (grade_code, user_id, user_passwd)
        VALUES (1, #{userId}, #{userPasswd})
    </insert>

    <!-- 사용자 회원가입을 위한 쿼리문2 -->
    <!-- TRIO_USERS_INFO 테이블에 사용자 상세 정보 저장 -->
    <insert id="saveUserInfo" parameterType="UserJoin">
        INSERT INTO TRIO_USERS_INFO (user_code, user_name, user_address, user_tel, user_nickname)
        VALUES (LAST_INSERT_ID(), #{userName}, #{userAddress}, #{userTel}, #{userNickname})
    </insert>

    <!-- 음 이게 가능은 하다는데 굳이 사용은 안했습니다... 저번에도 이렇게 insert 2개쓰니까 안돼던데 gpt 바보..
    <insert id="saveUserAndInfo" parameterType="UserJoin">
    INSERT INTO TRIO_USERS (grade_code, user_id, user_passwd)
    VALUES (1, #{userId}, #{userPasswd});

    INSERT INTO TRIO_USERS_INFO (user_code, user_name, user_address, user_tel, user_nickname)
    VALUES (LAST_INSERT_ID(), #{userName}, #{userAddress}, #{userTel}, #{userNickname});
    </insert>
    그리고 LAST_INSERT_ID()이거말고느 도저히 다른방법을 못 찾겠습니다...
    -->

    <!-- parameterType="map" : 매퍼 메서드의 매개변수 타입을 지정합니다
         resultType="UserFindId" : SQL 쿼리의 결과를 매핑할 객체의 타입을 지정합니다. insert 는 반환된는결과가없어서
         사용하지않습니다.
         map: 다양한 형식을 유연하게사용가능-->

    <!-- 사용자 아이디찾기를 위한 쿼리문 -->
    <select id="findId" parameterType="map" resultType="UserFindId">
        SELECT info.user_name AS userName,
               info.user_tel  AS userTel,
               tuser.user_id  AS userId
        FROM TRIO_USERS tuser
                 JOIN
             TRIO_USERS_INFO info
             ON
                 tuser.user_code = info.user_code
        WHERE info.user_name = #{userName}
          AND info.user_tel = #{userTel}
    </select>
    <!-- parameterType="map" : 매퍼 메서드의 매개변수 타입을 지정합니다
      resultType="UserFindId" : SQL 쿼리의 결과를 매핑할 객체의 타입을 지정합니다. insert 는 반환된는결과가없어서
      사용하지않습니다.
      map: 다양한 형식을 유연하게사용가능-->
    <!-- 사용자 비밀번호찾기를 위한 쿼리문 -->
    <select id="findPw" parameterType="map" resultType="UserFindPw">
        SELECT tuser.user_id     AS userId,
               info.user_name    AS userName,
               tuser.user_passwd AS userPasswd
        FROM TRIO_USERS tuser
                 JOIN
             TRIO_USERS_INFO info
             ON
                 tuser.user_code = info.user_code
        WHERE info.user_name = #{userName}
          AND tuser.user_id = #{userId}
    </select>

    <update id="updatePw" parameterType="map">
        UPDATE TRIO_USERS
        SET user_passwd = #{userPasswd}
        WHERE user_name = #{userName}
          AND  user_id = #{userId}
    </update>

</mapper>
